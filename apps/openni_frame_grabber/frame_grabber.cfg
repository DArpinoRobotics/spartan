coordinate_frames {
  root_frame = "local";

  # this is the pelvis link, its a legacy that its referred to as body
  body {
    relative_to = "local";
    history = 2000;
    max_frequency = 1000;
    pose_update_channel = "POSE_BODY";
    #update_channel = "HEAD_TO_BODY";  
    initial_transform{
      translation = [ 0, 0, 0 ];
      rpy = [0, 0, 0];
    }
  }

  utorso {
    relative_to = "body";
    history = 2000;
    max_frequency = 10;
    update_channel = "BODY_TO_UTORSO";  
    initial_transform{
      translation = [ 0, 0, 0 ];
      quat = [ 1, 0, 0, 0 ];
    }
  }

  # ABB Kinect position, previously hard coded in kinectlcm.py
  # now, we set this to identity, as the apriltag system will be used to
  # infer camera position
  KINECT_RGB {
    relative_to = "body";
    history = 2000;
    max_frequency = 100;
    update_channel = "WORLD_TO_KINECT_RGB";  
    initial_transform{
      #Original Numbers
      #translation=[-0.17790587, -1.24393384, 0.22335996];
      #quat = [0.71466764, -0.64979598,  0.17682733, -0.18906994];
  
      # Version from lcmlog 2015-03-07.01
      #translation = [-0.14422686, -1.24711244,  0.19138616];
      #quat = [ 0.78701596, -0.56319487,  0.14177015, -0.20813131];

      # Version: no transform
      translation = [0,0,0];
      rpy = [0,0,0];
    }
  }

  KINECT_TO_APRILTAG {
    relative_to = "KINECT_RGB";
    history = 0;
    update_channel = "APRIL_TAG_TO_CAMERA_LEFT";
    initial_transform {
      translation = [0.0, 0.0, 0.0];
      rpy = [0.0, -90.0, 0.0];
    }
  }  

  OPENNI_FRAME_LEFT {
    relative_to = "local";
    history = 2000;
    max_frequency = 100;
    update_channel = "OPENNI_FRAME_LEFT_TO_LOCAL";
    initial_transform {
      translation = [0.0, 0.0, 0.0];
      quat = [1.0, 0.0, 0.0, 0.0];
    }
  }

  OPENNI_FRAME_RIGHT {
    relative_to = "OPENNI_FRAME_LEFT";
    history = 2000;
    max_frequency = 100;
    initial_transform{
      # Needed for point cloud projection in director
      translation = [ 0, 0, 0 ];
      rpy = [ 0, 0, 0 ];
    }
  }
}


cameras {
  # fx fy skew cx cy 
  KINECT_RGB {
    lcm_channel = "KINECT_RGB";
    coord_frame = "KINECT_RGB";
    intrinsic_cal{
      width = 1920;
      height= 1080;
      distortion_model = "plumb-bob";
      distortion_k = [0,0,0];
      distortion_p = [0,0];
      pinhole = [ 1060, 1054, 0, 955, 524 ];
    }
  }


 OPENNI_FRAME_LEFT {
    lcm_channel = "OPENNI_FRAME_LEFT";
    coord_frame = "OPENNI_FRAME_LEFT";
    intrinsic_cal {
      width = 512;
      height= 424;
      distortion_model = "plumb-bob";
      distortion_k = [0,0,0];
      distortion_p = [0,0];

      # older alternative config setting, not used
      #pinhole = [ 528.01442863461716, 528.01442863461716, 0, 321.06398107, 242.97676897 ];

      # previous working config setting
      #pinhole = [ 528.01442863461716, 528.01442863461716, 0, 320.0, 267.0 ];

      # for use with momap segicp
      #pinhole = [ 570.3422241210938, 570.3422241210938, 0, 319.5, 239.5 ];
      #pinhole = [ 570.3422241210938, 570.3422241210938, 0, 314.5, 235.5 ];

      # elastic fusion default calibration for asus xiton
      pinhole = [ 528, 528, 0, 320.0, 240.0 ];
      
      # kinect2
      #pinhole = [367, 365, 0, 243, 208 ];
    }
  }

}
